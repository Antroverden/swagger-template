openapi: 3.0.1
info:
  title: OpenAPI definition
  version: v0
servers:
- url: http://localhost:8080
  description: Generated server url
paths:
  /api/v1/post:
    put:
      tags:
      - Контроллер управления почтовыми отправлениями
      summary: Изменение статуса почтового отправления
      operationId: updateStatus
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostItemDtoWithStatus'
        required: true
      responses:
        "409":
          description: Conflict
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "404":
          description: Not Found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "400":
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PostItemDtoWithStatus'
    post:
      tags:
      - Контроллер управления почтовыми отправлениями
      summary: Регистрация почтового отправления
      operationId: register
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostItemDtoWithStatus'
        required: true
      responses:
        "409":
          description: Conflict
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "404":
          description: Not Found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "400":
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "201":
          description: Created
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PostItemDtoWithStatus'
  /api/v1/post/{id}:
    get:
      tags:
      - Контроллер управления почтовыми отправлениями
      summary: Просмотр статуса почтового отправления
      operationId: getPostItemStatus
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "409":
          description: Conflict
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "404":
          description: Not Found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "400":
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PostItemDtoWithStatus'
  /api/v1/post/{id}/history:
    get:
      tags:
      - Контроллер управления почтовыми отправлениями
      summary: Просмотр полной истории движения почтового отправления
      operationId: getHistory
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "409":
          description: Conflict
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "404":
          description: Not Found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "400":
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/EventDto'
components:
  schemas:
    ErrorResponse:
      type: object
      properties:
        error:
          type: string
    PostItemDtoWithStatus:
      type: object
      properties:
        id:
          type: integer
          format: int64
        type:
          type: string
          enum:
          - LETTER
          - PACKAGE
          - PARCEL
          - POSTCARD
        recipientIndex:
          type: integer
          format: int32
        recipientAddress:
          type: string
        recipientName:
          type: string
        status:
          type: string
          enum:
          - REGISTERED
          - ARRIVED
          - DEPARTED
          - RECEIVED
        postOfficeDto:
          $ref: '#/components/schemas/PostOfficeDto'
    PostOfficeDto:
      type: object
      properties:
        index:
          type: integer
          format: int32
        title:
          type: string
        address:
          type: string
    EventDto:
      type: object
      properties:
        postItemDto:
          $ref: '#/components/schemas/PostItemDto'
        postOfficeDto:
          $ref: '#/components/schemas/PostOfficeDto'
        status:
          type: string
          enum:
          - REGISTERED
          - ARRIVED
          - DEPARTED
          - RECEIVED
        happenAt:
          type: string
          format: date-time
    PostItemDto:
      type: object
      properties:
        id:
          type: integer
          format: int64
        type:
          type: string
          enum:
          - LETTER
          - PACKAGE
          - PARCEL
          - POSTCARD
        recipientIndex:
          type: integer
          format: int32
        recipientAddress:
          type: string
        recipientName:
          type: string
